'use client';

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Canvas } from '@react-three/fiber';
import { Stars, OrbitControls } from '@react-three/drei';
import { X, Code, BookOpen, Users, Star, Sparkles, Award, Clock, Camera, Heart } from 'lucide-react';

// Client-only sparkle effects component
function SparkleEffects() {
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }

  return (
    <>
      {Array.from({ length: 6 }).map((_, i) => (
        <motion.div
          key={`sparkle-${i}`}
          className="absolute w-1 h-1 bg-yellow-400 rounded-full"
          style={{
            left: `${20 + i * 15}%`,
            top: `${30 + (i % 2) * 40}%`
          }}
          initial={{ scale: 0, opacity: 0 }}
          animate={{
            scale: [0, 1, 0],
            opacity: [0, 1, 0]
          }}
          transition={{
            duration: 2,
            repeat: Infinity,
            delay: i * 0.3
          }}
        />
      ))}
    </>
  );
}

// Client-only floating elements component
function FloatingElements() {
  const [positions, setPositions] = useState<Array<{left: number, top: number}>>([]);

  useEffect(() => {
    // Only generate positions after component mounts (client-side only)
    setPositions(
      Array.from({ length: 8 }, () => ({
        left: Math.random() * 100,
        top: Math.random() * 100,
      }))
    );
  }, []);

  // Don't render anything until positions are set
  if (positions.length === 0) {
    return null;
  }

  return (
    <div className="absolute inset-0 pointer-events-none overflow-hidden">
      {positions.map((pos, i) => (
        <motion.div
          key={`float-${i}`}
          className="absolute w-4 h-4 bg-blue-400/20 rounded-full"
          style={{
            left: `${pos.left}%`,
            top: `${pos.top}%`
          }}
          initial={{ scale: 0, opacity: 0 }}
          animate={{
            y: [-20, -60, -20],
            x: [-10, 10, -10],
            opacity: [0, 0.6, 0],
            scale: [0, 1, 0],
          }}
          transition={{
            duration: 4,
            repeat: Infinity,
            delay: i * 0.5,
          }}
        />
      ))}
    </div>
  );
}

// Client-only wrapper
function ClientOnly({ children }: { children: React.ReactNode }) {
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }

  return <>{children}</>;
}

export default function Home() {
  const [isLetterOpen, setIsLetterOpen] = useState(false);
  const [progress, setProgress] = useState(0);
  const [currentSection, setCurrentSection] = useState(0);

  const sections = [
    "Opening the letter...",
    "Loading memories...",
    "Preparing gratitude...",
    "Adding sparkles...",
    "Ready to read!"
  ];

  const handleEnvelopeClick = () => {
    setIsLetterOpen(true);
    
    // Start loading animation
    const timer = setInterval(() => {
      setProgress(prev => {
        if (prev >= 100) {
          clearInterval(timer);
          return 100;
        }
        return prev + 2;
      });
    }, 100);

    // Section progression
    const sectionTimer = setInterval(() => {
      setCurrentSection(prev => {
        if (prev >= sections.length - 1) {
          clearInterval(sectionTimer);
          return sections.length - 1;
        }
        return prev + 1;
      });
    }, 1000);
  };

  const handleLetterClose = () => {
    setIsLetterOpen(false);
    setProgress(0);
    setCurrentSection(0);
  };

  const photos = [
    {
      id: 1,
      caption: 'Our Amazing CS Class - Spring 2024',
      fallback: 'ðŸŽ“'
    },
    {
      id: 2,
      caption: 'When debugging became an adventure!',
      fallback: 'ðŸ’»'
    },
    {
      id: 3,
      caption: 'Proud moments with our mentor',
      fallback: 'ðŸŽ‰'
    },
    {
      id: 4,
      caption: 'Late night coding sessions that paid off',
      fallback: 'âš¡'
    }
  ];

  return (
    <main className="min-h-screen relative overflow-hidden">
      {/* Animated Background */}
      <div className="absolute inset-0 bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
        <Canvas className="absolute inset-0" camera={{ position: [0, 0, 1] }}>
          <Stars radius={100} depth={50} count={5000} factor={4} saturation={0} fade speed={1} />
          <OrbitControls enableZoom={false} enablePan={false} enableRotate={false} />
        </Canvas>
      </div>

      {/* Content Container */}
      <div className="relative z-10 w-full max-w-6xl mx-auto p-4 flex flex-col items-center justify-center min-h-screen">
        <motion.div
          initial={{ opacity: 0, y: -50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 1, delay: 0.2 }}
          className="text-center mb-12"
        >
          <motion.h1 
            className="text-5xl md:text-7xl font-bold text-gray-800 mb-6"
            animate={{ 
              textShadow: [
                "0 0 20px rgba(59, 130, 246, 0.3)",
                "0 0 40px rgba(59, 130, 246, 0.6)",
                "0 0 20px rgba(59, 130, 246, 0.3)"
              ]
            }}
            transition={{ duration: 3, repeat: Infinity }}
          >
            ðŸŽ‰ Happy Retirement! ðŸŽ“
          </motion.h1>
          <motion.p 
            className="text-xl md:text-2xl text-gray-600 mb-8 max-w-3xl mx-auto"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.8, duration: 0.8 }}
          >
            A special 3D animated message for our amazing Computer Science teacher
          </motion.p>
          
          {/* Floating Info Cards */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.2, duration: 0.8 }}
            className="flex flex-wrap justify-center gap-4 mb-8"
          >
            {[
              "3D Animations", 
              "Interactive Letter", 
              "Photo Gallery", 
              "Heartfelt Message"
            ].map((feature, index) => (
              <motion.div
                key={feature}
                className="bg-white/80 backdrop-blur-sm rounded-full px-4 py-2 shadow-lg border border-blue-200"
                animate={{ 
                  y: [0, -5, 0],
                  rotateY: [0, 5, 0]
                }}
                transition={{ 
                  duration: 2,
                  repeat: Infinity,
                  delay: index * 0.2
                }}
                whileHover={{ scale: 1.1, rotateY: 10 }}
              >
                <span className="text-blue-600 font-medium">{feature}</span>
              </motion.div>
            ))}
          </motion.div>
        </motion.div>

        {/* Main Envelope Section */}
        <div className="relative">
          {!isLetterOpen && (
            <motion.div
              initial={{ opacity: 0, scale: 0.5, rotateY: -30 }}
              animate={{ opacity: 1, scale: 1, rotateY: 0 }}
              transition={{ duration: 1, delay: 0.5, type: "spring", stiffness: 100 }}
              className="flex justify-center"
            >
              <motion.div 
                onClick={handleEnvelopeClick}
                className="w-64 h-40 bg-gradient-to-br from-amber-200 to-yellow-300 rounded-lg shadow-2xl cursor-pointer transform hover:scale-105 transition-all duration-300 flex items-center justify-center text-6xl relative overflow-hidden"
                whileHover={{ scale: 1.1, rotateY: 10 }}
                whileTap={{ scale: 0.95 }}
              >
                {/* Envelope design */}
                <div className="absolute top-0 left-0 w-full h-20 bg-gradient-to-br from-yellow-300 to-amber-400" 
                     style={{ clipPath: 'polygon(0 0, 50% 70%, 100% 0)' }} />
                <div className="absolute bottom-0 left-0 w-full h-32 bg-gradient-to-br from-amber-100 to-yellow-200" />
                <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-12 h-12 bg-red-500 rounded-full flex items-center justify-center text-white font-bold text-xl z-10">
                  ðŸ’Œ
                </div>
                
                {/* Sparkle effects - only on client */}
                <ClientOnly>
                  <SparkleEffects />
                </ClientOnly>
              </motion.div>
            </motion.div>
          )}

          {/* Letter Modal */}
          <AnimatePresence>
            {isLetterOpen && (
              <motion.div
                className="fixed inset-0 bg-black/60 backdrop-blur-md z-50 flex items-center justify-center p-4"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                transition={{ duration: 0.4 }}
                onClick={(e) => {
                  if (e.target === e.currentTarget) {
                    handleLetterClose();
                  }
                }}
              >
                <motion.div
                  className="relative bg-white rounded-3xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden"
                  initial={{ scale: 0.6, rotateX: -20, opacity: 0, y: 100 }}
                  animate={{ scale: 1, rotateX: 0, opacity: 1, y: 0 }}
                  exit={{ scale: 0.6, rotateX: 20, opacity: 0, y: 100 }}
                  transition={{ 
                    duration: 0.6,
                    type: "spring",
                    stiffness: 200,
                    damping: 20
                  }}
                >
                  {/* Progress Bar */}
                  {progress < 100 && (
                    <motion.div
                      className="absolute top-0 left-0 right-0 h-2 bg-gray-200 z-10"
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                    >
                      <motion.div
                        className="h-full bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500"
                        initial={{ width: 0 }}
                        animate={{ width: `${progress}%` }}
                        transition={{ duration: 0.3 }}
                      />
                    </motion.div>
                  )}

                  {/* Loading Screen */}
                  {progress < 100 && (
                    <motion.div
                      className="absolute inset-0 bg-gradient-to-br from-blue-50 to-purple-50 flex flex-col items-center justify-center z-20"
                      exit={{ opacity: 0, scale: 0.8 }}
                      transition={{ duration: 0.5 }}
                    >
                      <motion.div
                        className="text-center"
                        animate={{ scale: [1, 1.05, 1] }}
                        transition={{ duration: 2, repeat: Infinity }}
                      >
                        <h3 className="text-2xl font-bold text-gray-800 mb-2">
                          {sections[currentSection]}
                        </h3>
                        <p className="text-gray-600">
                          {progress}% Complete
                        </p>
                      </motion.div>

                      {/* Loading dots */}
                      <div className="flex space-x-2 mt-6">
                        {[0, 1, 2].map((i) => (
                          <motion.div
                            key={`dot-${i}`}
                            className="w-3 h-3 bg-blue-500 rounded-full"
                            animate={{
                              scale: [1, 1.3, 1],
                              opacity: [0.5, 1, 0.5]
                            }}
                            transition={{
                              duration: 1,
                              repeat: Infinity,
                              delay: i * 0.2
                            }}
                          />
                        ))}
                      </div>
                    </motion.div>
                  )}

                  {/* Main Letter Content */}
                  {progress >= 100 && (
                    <motion.div
                      className="relative"
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.8, delay: 0.3 }}
                    >
                      {/* Close Button */}
                      <button
                        onClick={handleLetterClose}
                        aria-label="Close letter"
                        className="absolute top-6 right-6 z-10 w-10 h-10 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-110"
                      >
                        <X className="w-5 h-5" />
                      </button>

                      {/* Header */}
                      <div className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 text-white p-8 rounded-t-3xl relative overflow-hidden">
                        <motion.div
                          initial={{ opacity: 0, y: 30 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: 0.5, duration: 0.8 }}
                          className="text-center relative z-10"
                        >
                          <motion.h2 
                            className="text-4xl md:text-5xl font-bold mb-4 flex items-center justify-center gap-3 flex-wrap"
                            animate={{ 
                              textShadow: [
                                "0 0 20px rgba(255,255,255,0.5)",
                                "0 0 30px rgba(255,255,255,0.8)",
                                "0 0 20px rgba(255,255,255,0.5)"
                              ]
                            }}
                            transition={{ duration: 2, repeat: Infinity }}
                          >
                            <Sparkles className="w-10 h-10 text-yellow-300" />
                            <span>Thank You for Everything!</span>
                            <Award className="w-10 h-10 text-yellow-300" />
                          </motion.h2>
                          <p className="text-blue-100 text-xl">
                            A heartfelt message from your grateful students
                          </p>
                        </motion.div>
                      </div>

                      {/* Letter Content */}
                      <div className="max-h-[60vh] overflow-y-auto p-8 space-y-8">
                        <motion.div
                          initial={{ opacity: 0, x: -30 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: 0.7, duration: 0.8 }}
                          className="space-y-6"
                        >
                          <p className="text-gray-700 leading-relaxed text-lg">
                            Dear <span className="font-bold text-blue-600 text-xl">Mr./Ms. [Teacher&apos;s Name]</span>,
                          </p>
                          
                          <motion.p 
                            className="text-gray-700 leading-relaxed text-lg"
                            initial={{ opacity: 0 }}
                            animate={{ opacity: 1 }}
                            transition={{ delay: 1, duration: 0.8 }}
                          >
                            As you embark on this well-deserved retirement, we want you to know how profoundly 
                            you&apos;ve impacted our lives. Your passion for computer science didn&apos;t just teach us 
                            to code â€” it taught us to think, to solve problems, and to never stop learning.
                          </motion.p>

                          <motion.p 
                            className="text-gray-700 leading-relaxed text-lg"
                            initial={{ opacity: 0 }}
                            animate={{ opacity: 1 }}
                            transition={{ delay: 1.3, duration: 0.8 }}
                          >
                            Through late-night debugging sessions, challenging algorithms, and your patient 
                            explanations of complex concepts, you&apos;ve shaped the next generation of developers, 
                            engineers, and innovators. Your enthusiasm was contagious, and your belief in us 
                            made all the difference.
                          </motion.p>
                        </motion.div>

                        {/* Achievements Section */}
                        <motion.div
                          initial={{ opacity: 0, scale: 0.9 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: 1.6, duration: 0.8 }}
                          className="bg-gradient-to-br from-gray-50 to-blue-50 rounded-2xl p-8 border border-blue-100 shadow-lg"
                        >
                          <h3 className="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                            <Star className="w-7 h-7 text-yellow-500 mr-3" />
                            What You&apos;ve Given Us
                          </h3>
                          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                            {[
                              { icon: Code, text: "Programming Skills" },
                              { icon: BookOpen, text: "Love for Learning" },
                              { icon: Users, text: "Teamwork Values" }
                            ].map((item, index) => (
                              <motion.div
                                key={`skill-${index}`}
                                className="flex items-center space-x-4 p-4 bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 border-l-4 border-blue-500"
                                initial={{ opacity: 0, y: 20 }}
                                animate={{ opacity: 1, y: 0 }}
                                transition={{ delay: 1.8 + index * 0.2, duration: 0.6 }}
                                whileHover={{ scale: 1.05, rotateY: 5 }}
                              >
                                <item.icon className="w-8 h-8 text-blue-500" />
                                <span className="text-gray-700 font-medium text-lg">{item.text}</span>
                              </motion.div>
                            ))}
                          </div>
                        </motion.div>

                        {/* Closing Message */}
                        <motion.div
                          initial={{ opacity: 0, y: 30 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: 3, duration: 0.8 }}
                          className="space-y-6 text-center"
                        >
                          <p className="text-gray-700 leading-relaxed text-lg">
                            Your legacy lives on in every line of code we write, every problem we solve, 
                            and every time we help someone else understand what once seemed impossible. 
                            Thank you for believing in us and for making computer science not just a subject, 
                            but a passion.
                          </p>

                          <p className="text-gray-700 leading-relaxed text-lg">
                            Enjoy your retirement â€” you&apos;ve earned every moment of rest and relaxation! 
                            We hope it&apos;s filled with joy, adventure, and maybe a little bit of coding 
                            just for fun. ðŸ˜Š
                          </p>

                          {/* Signature */}
                          <motion.div
                            initial={{ opacity: 0, scale: 0.9 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 3.5, duration: 0.8 }}
                            className="pt-8 border-t-2 border-gray-200"
                          >
                            <p className="text-xl font-bold text-gray-800 mb-3">
                              With love and gratitude,
                            </p>
                            <motion.p 
                              className="text-blue-600 font-bold text-2xl mb-3"
                              animate={{ 
                                textShadow: [
                                  "0 0 10px rgba(59, 130, 246, 0.5)",
                                  "0 0 20px rgba(59, 130, 246, 0.8)",
                                  "0 0 10px rgba(59, 130, 246, 0.5)"
                                ]
                              }}
                              transition={{ duration: 2, repeat: Infinity }}
                            >
                              Your Computer Science Students ðŸ’™
                            </motion.p>
                            <p className="text-gray-500 text-lg">
                              Class of 2024
                            </p>
                          </motion.div>
                        </motion.div>

                        {/* Photo Gallery Section */}
                        <motion.div
                          initial={{ opacity: 0, y: 50 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ duration: 0.8, delay: 2 }}
                          className="mt-16 px-4"
                        >
                          <motion.div
                            initial={{ opacity: 0, y: 20 }}
                            animate={{ opacity: 1, y: 0 }}
                            transition={{ delay: 0.2, duration: 0.6 }}
                            className="text-center mb-8"
                          >
                            <h2 className="text-3xl font-bold text-gray-800 mb-4 flex items-center justify-center">
                              <Camera className="w-8 h-8 mr-3 text-blue-500" />
                              Memories with Our Favorite Teacher
                            </h2>
                            <p className="text-gray-600 max-w-2xl mx-auto">
                              These moments capture the joy, learning, and unforgettable experiences 
                              we shared in your computer science classroom.
                            </p>
                          </motion.div>

                          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
                            {photos.map((photo, index) => (
                              <motion.div
                                key={`photo-${photo.id}`}
                                initial={{ opacity: 0, y: 50, rotateY: -15 }}
                                animate={{ opacity: 1, y: 0, rotateY: 0 }}
                                transition={{ 
                                  delay: 0.4 + index * 0.1, 
                                  duration: 0.6,
                                  type: "spring",
                                  stiffness: 100
                                }}
                                className="group relative"
                              >
                                <motion.div
                                  whileHover={{ 
                                    scale: 1.05,
                                    rotateY: 5,
                                    rotateX: 5
                                  }}
                                  whileTap={{ scale: 0.95 }}
                                  transition={{ duration: 0.3 }}
                                  className="relative bg-white rounded-2xl shadow-lg overflow-hidden"
                                >
                                  {/* Photo Container */}
                                  <div className="relative aspect-square bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                                    <div className="text-6xl opacity-50">
                                      {photo.fallback}
                                    </div>
                                    
                                    <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                                    
                                    <motion.div
                                      initial={{ scale: 0, opacity: 0 }}
                                      whileHover={{ scale: 1, opacity: 1 }}
                                      className="absolute top-4 right-4 w-8 h-8 bg-red-500 rounded-full flex items-center justify-center shadow-lg"
                                    >
                                      <Heart className="w-4 h-4 text-white fill-current" />
                                    </motion.div>
                                  </div>

                                  {/* Caption */}
                                  <div className="p-4">
                                    <motion.p
                                      initial={{ opacity: 0.7 }}
                                      whileHover={{ opacity: 1 }}
                                      className="text-sm font-medium text-gray-800 text-center leading-relaxed"
                                    >
                                      {photo.caption}
                                    </motion.p>
                                  </div>
                                </motion.div>
                              </motion.div>
                            ))}
                          </div>

                          {/* Instructions */}
                          <motion.div
                            initial={{ opacity: 0 }}
                            animate={{ opacity: 1 }}
                            transition={{ delay: 1, duration: 0.6 }}
                            className="mt-8 text-center"
                          >
                            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 max-w-2xl mx-auto">
                              <p className="text-blue-800 text-sm">
                                <strong>ðŸ’¡ To add real photos:</strong> Place your class photos in the{' '}
                                <code className="bg-blue-100 px-2 py-1 rounded text-xs">public/images/</code>{' '}
                                folder and they&apos;ll automatically appear here!
                              </p>
                            </div>
                          </motion.div>
                        </motion.div>
                      </div>
                    </motion.div>
                  )}
                </motion.div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>

        {/* Instructions */}
        {!isLetterOpen && (
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1.5, duration: 0.8 }}
            className="text-center mt-8"
          >
            <motion.div
              className="bg-white/90 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-blue-100 max-w-md mx-auto"
              animate={{ 
                boxShadow: [
                  "0 10px 30px rgba(59, 130, 246, 0.1)",
                  "0 20px 40px rgba(59, 130, 246, 0.2)",
                  "0 10px 30px rgba(59, 130, 246, 0.1)"
                ]
              }}
              transition={{ duration: 2, repeat: Infinity }}
            >
              <h3 className="text-lg font-semibold text-gray-800 mb-3">
                âœ¨ Interactive 3D Experience
              </h3>
              <p className="text-gray-600 mb-4">
                Hover over the envelope to see it come alive, then click to reveal the heartfelt letter with progress loading and celebration!
              </p>
              <div className="flex justify-center space-x-2">
                {["ðŸŽ¨", "ðŸš€", "ðŸ’«"].map((emoji, i) => (
                  <motion.span
                    key={`emoji-${i}`}
                    className="text-2xl"
                    animate={{ 
                      rotate: [0, 360],
                      scale: [1, 1.2, 1]
                    }}
                    transition={{ 
                      duration: 3,
                      repeat: Infinity,
                      delay: i * 0.5
                    }}
                  >
                    {emoji}
                  </motion.span>
                ))}
              </div>
            </motion.div>
          </motion.div>
        )}
      </div>

      {/* Floating Elements - Client Only */}
      <ClientOnly>
        <FloatingElements />
      </ClientOnly>
    </main>
  );
}